function pot(e,t,n){"use strict";var r={id:{length:16},path_setup:{retry:1e3},setup:{retry:{min:1e3,max:6048e5}},pull:{retries:5},update:{ignore:{min:1e3,max:6048e5}},start:{keepalive:{interval:500},sentence:2e3,log:{max_length:1048576}}};if(!(this instanceof pot))throw{code:0,description:"Constructor must be called with new.",url:""};var o=this,i={root:e,app:path.resolve(e,"app"),modules:{app:path.resolve(e,"app","node_modules"),pot:path.resolve(path.dirname(module.parent.filename),"node_modules")},resources:path.resolve(e,"resources")},s=t,a={local:n,remote:"origin/"+n},p=new confio.confio(i.root+"/potty.json",__dirname+"/../config/pot.json"),c={start:function(){},data:function(){},error:function(){},shutdown:function(){},reboot:function(){},update:function(){}};o.path={root:function(){return i.root},app:function(){return i.app},resources:function(){return i.resources},modules:{app:function(){return i.modules.app},pot:function(){return i.modules.pot}}},o.repository=function(){return s},o.branch={local:function(){return a.local},remote:function(){return a.remote}},o.id=function(){if(""===p.get("id"))try{p.set("id",randomstring.generate(r.id.length))}catch(e){}return p.get("id")},o.on=function(e,t){if(!(e in c))throw{code:2,description:"Event does not exist.",url:""};c[e]=t};var u=function(){return new Promise(function(e,t){var n=child_process.fork(npm,["install"],{cwd:i.app,silent:!0});n.on("error",t),n.on("exit",function(n){n?t():e()})})},l=function(){var e=function(e){return new Promise(function(t,n){rimraf(e,function(){mkdirp(e,function(e){e?n(e):t()})})})};return new Promise(function(t){!function n(){e(i.app).then(function(){return e(i.resources)}).then(t)["catch"](function(){nappy.wait["for"](r.path_setup.retry).then(n)})}()})},d=function(){var e=function(){return nappy.wait.connection().then(function(){return nodegit.Clone(s,i.app,{checkoutBranch:a.local})})};return l().then(function(){return new Promise(function(t){nappy.wait.till(p.get("setup_last")+Math.min(Math.pow(2,p.get("setup_retries"))*r.setup.retry.min,r.setup.retry.max)).then(function(){try{p.set("setup_last",(new Date).getTime())}catch(n){}e().then(function(){try{p.set("setup_retries",0)}catch(e){}t()})["catch"](function(){try{p.set("setup_retries",p.get("setup_retries")+1)}catch(e){}d().then(t)})})})})},f=function(){var e=function(){return nappy.wait.connection().then(function(){return nodegit.Repository.open(i.app)}).then(function(e){return e.fetch("origin").then(function(){return e.mergeBranches(a.local,a.remote)})})};return new Promise(function(t){var n=0;!function o(){n<r.pull.retries?e().then(t)["catch"](function(){n++,o()}):d().then(t)}()}).then(function(){return nodegit.Repository.open(i.app)}).then(function(e){return e.getBranchCommit(a.local)}).then(function(e){var t=p.get("head")!==e.id().toString();try{p.set("head",e.id().toString())}catch(n){}return Promise.resolve(t)})},m=function(e){return!e&&(new Date).getTime()<p.get("pull_last")+Math.min(Math.pow(2,p.get("pull_retries"))*r.update.ignore.min,r.update.ignore.max)?Promise.resolve():f().then(function(e){try{e?(c.update(),p.set("pull_retries",0)):p.set("pull_retries",p.get("pull_retries")+1),p.set("pull_last",(new Date).getTime())}catch(t){}return e}).then(function(e){return e?u():Promise.resolve()})};o.start=function(){!function e(){var t=child_process.spawn(node,[i.app],{cwd:i.resources,detached:!0,stdio:["pipe","pipe","pipe","ipc"],env:{NODE_PATH:i.modules.pot}}),n=null,s={stdout:"",stderr:""};t.stdout.on("data",function(e){c.data(e),s.stdout+=e,s.stdout.length>r.start.log.max_length&&(s.stdout=s.stdout.slice(s.stdout.length-r.start.log.max_length))}),t.stderr.on("data",function(e){s.stderr+=e,s.stderr.length>r.start.log.max_length&&(s.stderr=s.stderr.slice(s.stderr.length-r.start.log.max_length))});var a=function(r){t.buried||(t.buried=!0,t.kill(),{"null":function(){c.error({reason:r,log:s}),m().then(e)},shutdown:c.shutdown,reboot:function(){c.reboot(),e()},update:function(){m(!0).then(e)}}[n](),n="executed")};t.on("close",function(e,t){a({event:"close",code:e,signal:t})}),t.on("disconnect",function(){a({event:"disconnect"})}),t.on("error",function(e){a({event:"error",error:e})}),t.on("exit",function(e,t){a({event:"exit",code:e,signal:t})});var p=new nappy.alarm(2*r.start.keepalive.interval);p.then(t.kill),t.on("message",function(e){"keepalive"===e.cmd?(t.started||(c.start(),t.started=!0,t.send({cmd:"setup",version:version,id:o.id()})),p.reset(),t.send({cmd:"keepalive"})):("shutdown"===e.cmd||"reboot"===e.cmd||"update"===e.cmd)&&(n=e.cmd,t.send({cmd:"goodnight"}),nappy.wait["for"](r.start.sentence).then(function(){"executed"!==n&&(n=null,t.kill())}))})}()}}var nappy=require("nappy"),nodegit=require("nodegit"),rimraf=require("rimraf"),mkdirp=require("mkdirp"),confio=require("confio"),path=require("path"),child_process=require("child_process"),randomstring=require("randomstring"),version=require("../package.json").version,npm=path.resolve(__dirname,"../node_modules/npm",require("../node_modules/npm/package.json").bin.npm),node=process.argv[0],app={settings:{keepalive:{interval:500},sentence:2e3},setup:function(){"use strict";return new Promise(function(e){app.keepalive={alarm:new nappy.alarm(2*app.settings.keepalive.interval),interval:setInterval(function(){process.send({cmd:"keepalive"})},app.settings.keepalive.interval)},app.keepalive.alarm.then(process.exit),process.on("message",function(t){"keepalive"===t.cmd?app.keepalive.alarm.reset():"setup"===t.cmd&&e({id:t.id,version:t.version})})})},shutdown:function(){"use strict";return new Promise(function(e){app.keepalive.alarm.abort(),clearInterval(app.keepalive.interval),nappy.wait["for"](app.settings.sentence).then(process.exit),process.send({cmd:"shutdown"}),process.on("message",function(t){"goodnight"===t.cmd&&e()})})},reboot:function(){"use strict";return new Promise(function(e){app.keepalive.alarm.abort(),clearInterval(app.keepalive.interval),nappy.wait["for"](app.settings.sentence).then(process.exit),process.send({cmd:"reboot"}),process.on("message",function(t){"goodnight"===t.cmd&&e()})})},update:function(){"use strict";return new Promise(function(e){app.keepalive.alarm.abort(),clearInterval(app.keepalive.interval),nappy.wait["for"](app.settings.sentence).then(process.exit),process.send({cmd:"update"}),process.on("message",function(t){"goodnight"===t.cmd&&e()})})}};module.exports={pot:pot,app:app};