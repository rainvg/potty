function pot(t,e,n){"use strict";var r={path_setup:{retry:1e3},setup:{retry:{min:1e3,max:6048e5}},pull:{retries:5},update:{ignore:{min:1e3,max:6048e5}},run:{keepalive:{interval:500},sentence:2e3,log:{max_length:1048576}}};if(!(this instanceof pot))throw{code:0,description:"Constructor must be called with new.",url:""};var o=this,i={root:t,app:path.resolve(t,"app"),resources:path.resolve(t,"resources")},u=e,c={local:n,remote:"origin/"+n},a=new confio.confio(i.root+"/potty.json",__dirname+"/../config/pot.json"),s={start:function(){},error:function(){},shutdown:function(){},reboot:function(){},update:function(){}};o.path={root:function(){return i.root},app:function(){return i.app},resources:function(){return i.resources}},o.repository=function(){return u},o.branch={local:function(){return c.local},remote:function(){return c.remote}},o.on=function(t,e){if(!(t in s))throw{code:2,description:"Event does not exist.",url:""};s[t]=e};var p=function(){var t=function(t){return new Promise(function(e,n){rimraf(t,function(){mkdirp(t,function(t){t?n(t):e()})})})};return new Promise(function(e){!function n(){t(i.app).then(function(){return t(i.resources)}).then(e)["catch"](function(){nappy.wait["for"](r.path_setup.retry).then(n)})}()})},l=function(){var t=function(){return nappy.wait.connection().then(function(){return nodegit.Clone(u,i.app,{checkoutBranch:c.local})})};return p().then(function(){return new Promise(function(e){nappy.wait.till(a.get("setup_last")+Math.min(Math.pow(2,a.get("setup_retries"))*r.setup.retry.min,r.setup.retry.max)).then(function(){try{a.set("setup_last",(new Date).getTime())}catch(n){}t().then(function(){try{a.set("setup_retries",0)}catch(t){}e()})["catch"](function(){try{a.set("setup_retries",a.get("setup_retries")+1)}catch(t){}l().then(e)})})})})},f=function(){var t=function(){return nappy.wait.connection().then(function(){return nodegit.Repository.open(i.app)}).then(function(t){return t.fetch("origin").then(function(){return t.mergeBranches(c.local,c.remote)})})};return new Promise(function(e){var n=0;!function o(){n<r.pull.retries?t().then(e)["catch"](function(){n++,o()}):l().then(e)}()}).then(function(){return nodegit.Repository.open(i.app)}).then(function(t){return t.getBranchCommit(c.local)}).then(function(t){var e=a.get("head")!==t.id().toString();try{a.set("head",t.id().toString())}catch(n){}return Promise.resolve(e)})},h=function(t){return!t&&(new Date).getTime()<a.get("pull_last")+Math.min(Math.pow(2,a.get("pull_retries"))*r.update.ignore.min,r.update.ignore.max)?Promise.resolve():f().then(function(t){try{t?(s.update(),a.set("pull_retries",0)):a.set("pull_retries",a.get("pull_retries")+1),a.set("pull_last",(new Date).getTime())}catch(e){}})};o.run=function(){!function t(){var e=child_process.fork(i.app,{cwd:i.resources,silent:!0}),n=null,o="";e.stdio.on("data",function(t){o+=t,o.length>r.run.log.max_length&&(o=o.slice(o.length-r.run.log.max_length))});var u=function(r){e.buried||(e.buried=!0,e.kill(),{"null":function(){s.error({reason:r,log:o}),h().then(t)},shutdown:s.shutdown,reboot:function(){s.reboot(),t()},update:function(){h(!0).then(t)}}[n]())};e.on("close",function(){u("close")}),e.on("disconnect",function(){u("disconnect")}),e.on("error",function(){u("error")}),e.on("exit",function(){u("exit")});var c=new nappy.alarm(2*r.run.keepalive.interval);c.then(e.kill),e.on("message",function(t){"keepalive"===t.cmd?(e.started||(s.start(),e.started=!0),c.reset(),e.send({cmd:"keepalive"})):("shutdown"===t.cmd||"reboot"===t.cmd||"update"===t.cmd)&&(n=t.cmd,e.send({cmd:"goodnight"}),nappy.wait["for"](r.run.sentence).then(function(){"executed"!==n&&(n=null,e.kill())}))})}()}}var nappy=require("nappy"),nodegit=require("nodegit"),rimraf=require("rimraf"),mkdirp=require("mkdirp"),confio=require("confio"),path=require("path"),child_process=require("child_process");module.exports={pot:pot};